# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-06 17:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('team', '0001_initial'),
        ('player', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('gamePk', models.IntegerField(primary_key=True, serialize=False)),
                ('gameType', models.CharField(choices=[(b'PR', b'Pre-season'), (b'R', b'Regular season'), (b'P', b'Playoffs'), (b'A', b'All-Star game')], max_length=2)),
                ('dateTime', models.DateTimeField(blank=True, null=True)),
                ('endDateTime', models.DateTimeField(blank=True, null=True)),
                ('homeScore', models.IntegerField()),
                ('awayScore', models.IntegerField()),
                ('homeShots', models.IntegerField()),
                ('awayShots', models.IntegerField()),
                ('awayTeam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awayTeam', to='team.Team')),
                ('homeTeam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeTeam', to='team.Team')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Venue')),
            ],
        ),
        migrations.CreateModel(
            name='GameScratch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayByPlay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gamePk', models.IntegerField()),
                ('link', models.URLField()),
                ('timeStamp', models.CharField(max_length=20)),
                ('gameState', models.CharField(choices=[(b'1', b'Preview (Scheduled)'), (b'2', b'Preview (Pre-Game)'), (b'3', b'Live (In Progress)'), (b'4', b'Live (In Progress - Critical)'), (b'5', b'Final (Game Over)'), (b'6', b'Final (Final)'), (b'7', b'Final (Final)'), (b'8', b'Preview (Scheduled (Time TBD))'), (b'9', b'Preview (Postponed)')], max_length=1)),
                ('period', models.IntegerField()),
                ('periodTime', models.TimeField()),
                ('dateTime', models.DateTimeField()),
                ('homeScore', models.IntegerField()),
                ('awayScore', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlayerGameStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeOnIce', models.TimeField()),
                ('assists', models.IntegerField()),
                ('goals', models.IntegerField()),
                ('shots', models.IntegerField()),
                ('hits', models.IntegerField()),
                ('powerPlayGoals', models.IntegerField()),
                ('playerPlayAssists', models.IntegerField()),
                ('penaltyMinutes', models.IntegerField()),
                ('faceOffWins', models.IntegerField()),
                ('faceoffTaken', models.IntegerField()),
                ('takeaways', models.IntegerField()),
                ('giveaways', models.IntegerField()),
                ('shortHandedGoals', models.IntegerField()),
                ('shortHandedAssists', models.IntegerField()),
                ('blocked', models.IntegerField()),
                ('plusMinus', models.IntegerField()),
                ('evenTimeOnIce', models.TimeField()),
                ('powerPlayTimeOnIce', models.TimeField()),
                ('shortHandedTimeOnIce', models.TimeField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerOnIce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_type', models.IntegerField(blank=True, choices=[(0, b'Unknown'), (1, b'Winner'), (2, b'Loser'), (3, b'Hitter'), (4, b'Hittee'), (5, b'Scorer'), (6, b'Assist'), (7, b'Shooter'), (8, b'Goalie'), (9, b'Blocker'), (10, b'PenaltyOn'), (11, b'DrewBy'), (12, b'ServedBy'), (13, b'PlayerID'), (14, b'Fighter'), (15, b'OnIce')], null=True)),
                ('timeOnIce', models.TimeField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
                ('play', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.PlayByPlay')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Player')),
            ],
        ),
        migrations.CreateModel(
            name='PlayType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('nhlCode', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Shootout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('awayScores', models.IntegerField()),
                ('awayAttempts', models.IntegerField()),
                ('homeScores', models.IntegerField()),
                ('homeAttempts', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.Game')),
            ],
        ),
        migrations.AddField(
            model_name='playbyplay',
            name='playType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playbyplay.PlayType'),
        ),
    ]
